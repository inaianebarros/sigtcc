# Generated by Django 5.2.1 on 2025-05-23 03:48

import django.core.files.storage
import django.db.models.deletion
import simple_history.models
import tcc.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tcc', '0001_initial'),
        ('user', '0003_historicalstudentprofile_studentprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location=''), upload_to=tcc.models.DocumentFilePath(), verbose_name='Arquivo')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalTaskTCC',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Criação')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Atualização')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('description', models.TextField(max_length=1500, verbose_name='Descrição')),
                ('due_date', models.DateTimeField(verbose_name='Data de Entrega')),
                ('task_status', models.CharField(choices=[('COMPLETE', 'Concluída'), ('INCOMPLETE', 'Incompleta'), ('NOT_DONE', 'Não Iniciada')], max_length=12, verbose_name='Status')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('document_task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='tcc_task', to='tcc.document', verbose_name='Documento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('professor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='tcc_task', to='user.professorprofile', verbose_name='Professor')),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='tcc_task', to='user.studentprofile', verbose_name='Aluno')),
                ('tcc', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='tcc_task', to='tcc.tcc', verbose_name='TCC')),
            ],
            options={
                'verbose_name': 'Histórico',
                'verbose_name_plural': 'historical task tccs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TaskTCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('description', models.TextField(max_length=1500, verbose_name='Descrição')),
                ('due_date', models.DateTimeField(verbose_name='Data de Entrega')),
                ('task_status', models.CharField(choices=[('COMPLETE', 'Concluída'), ('INCOMPLETE', 'Incompleta'), ('NOT_DONE', 'Não Iniciada')], max_length=12, verbose_name='Status')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('document_task', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tcc_tasks', related_query_name='tcc_task', to='tcc.document', verbose_name='Documento')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tasks_tcc', related_query_name='tcc_task', to='user.professorprofile', verbose_name='Professor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tcc_tasks', related_query_name='tcc_task', to='user.studentprofile', verbose_name='Aluno')),
                ('tcc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tcc_tasks', related_query_name='tcc_task', to='tcc.tcc', verbose_name='TCC')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='document',
            name='task_tcc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', related_query_name='document', to='tcc.tasktcc', verbose_name='Tarefa'),
        ),
    ]
